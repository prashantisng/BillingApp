plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id  'kotlin-kapt'
}

android {
    namespace 'com.outthinking.audioextractor'
    compileSdk 34

    defaultConfig {
        applicationId "com.outthinking.audioextractor"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"

    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    implementation "com.android.billingclient:billing-ktx:$billingVersion"

    // AndroidX Library.

    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtentionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.cardview:cardview:$cardViewVersion"
    implementation "androidx.leanback:leanback-preference:$leanbackPreferenceVersion"



    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Glide image library
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Firebase Bill of Materials
    implementation platform("com.google.firebase:firebase-bom:$firebaseBomVersion")
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // FirebaseUI Auth library.
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiVersion"

    //Room
    /*kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"*/

    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    // Retrofit dependencies
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptorVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitSuiteVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitSuiteVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitSuiteVersion"

    // Test dependencies.
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "io.mockk:mockk:$mockKVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressoVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockKVersion"

    //Compose dependencies
    def composeBom = platform('androidx.compose:compose-bom:2023.03.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    // Optional - Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'


    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation "com.github.bumptech.glide:compose:$glideComposeVersion"
}